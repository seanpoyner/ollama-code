# Dockerfile for Docker Desktop
FROM ubuntu:22.04

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    # Python and development tools
    python3.11 \
    python3.11-venv \
    python3-pip \
    python3-dev \
    build-essential \
    # Git for version control
    git \
    # Curl and wget for downloading
    curl \
    wget \
    # Node.js for MCP servers
    nodejs \
    npm \
    # Editor for testing file operations
    nano \
    vim \
    # Utilities
    sudo \
    tree \
    htop \
    jq \
    # Clean up
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.11 as default
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1

# Install Ollama directly
RUN curl -L https://ollama.com/download/ollama-linux-amd64 -o /usr/local/bin/ollama && \
    chmod +x /usr/local/bin/ollama

# Create a non-root user for running ollama-code
RUN useradd -m -s /bin/bash ollama && \
    echo "ollama:ollama" | chpasswd && \
    echo "ollama ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Create necessary directories
RUN mkdir -p /home/ollama/.ollama/logs && \
    mkdir -p /home/ollama/.ollama/ollama-code && \
    mkdir -p /home/ollama/.ollama/models && \
    mkdir -p /home/ollama/workspace && \
    chown -R ollama:ollama /home/ollama

# Switch to ollama user
USER ollama
WORKDIR /home/ollama

# Copy ollama-code repository
COPY --chown=ollama:ollama . /home/ollama/ollama-code/

# Create Python virtual environment and install
RUN cd /home/ollama/ollama-code && \
    python3 -m venv venv && \
    . venv/bin/activate && \
    pip install --upgrade pip && \
    pip install -e ".[all]"

# Add venv to PATH
ENV PATH="/home/ollama/ollama-code/venv/bin:$PATH"

# Create a startup script
RUN echo '#!/bin/bash\n\
echo "🐳 Ollama Code Docker Environment"\n\
echo "================================="\n\
echo ""\n\
echo "To get started:"\n\
echo "  1. Open a terminal in Docker Desktop"\n\
echo "  2. Start Ollama: ollama serve &"\n\
echo "  3. Pull a model: ollama pull llama3.2:3b"\n\
echo "  4. Run: cd /workspace && ollama-code"\n\
echo ""\n\
echo "Or run the test script: /home/ollama/ollama-code/test_docker_env.sh"\n\
echo ""\n\
' > /home/ollama/startup.sh && chmod +x /home/ollama/startup.sh

# Default working directory
WORKDIR /home/ollama/workspace

# Run startup script and keep container alive
CMD ["/bin/bash", "-c", "/home/ollama/startup.sh && tail -f /dev/null"]